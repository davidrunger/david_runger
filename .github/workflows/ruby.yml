name: Test (& Deploy)

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      # https://stackoverflow.com/q/57915791/4009384
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432 # Maps port 5432 on service container to the host
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379 # Maps port 6379 on service container to the host
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 100 # this might cause issues if there are more than 100 commits in a PR (?)
    - name: Set up Ruby 3.1.2
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.1.2
        bundler-cache: true
    - uses: actions/setup-node@v3
      with:
        node-version: 18.9.1
    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-
    - name: Run tests & linters
      run: bin/pallets --verbose -r ./bin/run-tests.rb
      env:
        CI: true
        AWS_EC2_METADATA_DISABLED: true
        RAILS_ENV: test
        NODE_ENV: test
        DISABLE_SPRING: 1
        VITE_RUBY_AUTO_BUILD: false
        SECRET_KEY_BASE: 0af8c0e49e9259f2d777cfcd121d8540cee914c34b0abf08dd825bdee47c402daf9f2b9b74a9fff6f88ed95257ae39504e0d59c66400413b0cf7d29079c6358b
        # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_HOST: 127.0.0.1
        POSTGRES_USER: postgres
        PGPASSWORD: postgres # https://www.postgresql.org/docs/current/libpq-envars.html
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        # The hostname used to communicate with the Redis service container
        REDIS_HOST: redis
        REDIS_PORT: 6379
        PERCY_TOKEN: "${{secrets.PERCY_TOKEN}}"
        CODECOV_TOKEN: "${{secrets.CODECOV_TOKEN}}"
        RAILS_MASTER_KEY: "${{secrets.RAILS_MASTER_KEY}}"
    - name: Save fixtures artifact
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: fixtures
        path: spec/fixtures/
        retention-days: 5

  deploy-and-prerender:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Clone repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Deploy to Dokku
        uses: dokku/github-action@master
        with:
          git_push_flags: --force -vvv
          git_remote_url: 'ssh://dokku@198.199.122.6:22/davidrunger'
          ssh_private_key: ${{secrets.SSH_PRIVATE_KEY}}

      - name: Set up Ruby 3.1.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true

      - name: Prerender page(s) and upload them to S3
        run: bin/prerender
        env:
          CI: true
          AWS_ACCESS_KEY_ID: "${{secrets.AWS_ACCESS_KEY_ID}}"
          AWS_SECRET_ACCESS_KEY: "${{secrets.AWS_SECRET_ACCESS_KEY}}"
