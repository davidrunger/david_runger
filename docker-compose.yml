x-rails-config: &default-rails-config
  build:
    context: .
  depends_on:
    memcached:
      condition: service_healthy
    postgres:
      condition: service_healthy
    redis:
      condition: service_healthy
  environment:
    MEMCACHED_PASSWORD: ''
    MEMCACHED_URL: memcached://memcached:11211
    RAILS_ENV: production
  networks:
    - external
    - internal

services:
  certbot:
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    image: certbot/certbot
    networks:
      - external
    volumes:
      - ./ssl-data/certbot/conf:/etc/letsencrypt
      - ./ssl-data/certbot/www:/var/www/_letsencrypt
  clock:
    <<: *default-rails-config
    command: ['bin/skedjewel']
    depends_on:
      initialize_database:
        condition: service_completed_successfully
      worker:
        condition: service_started
  initialize_database:
    <<: *default-rails-config
  memcached:
    healthcheck:
      # https://github.com/docker-library/memcached/issues/ 91#issuecomment-1733748674
      test: ['CMD-SHELL', 'echo "version" | nc -vn -w 1 127.0.0.1 11211']
      interval: 2s
      timeout: 1s
      retries: 10
    image: memcached:1.6.29-alpine
    networks:
      - internal
  nginx:
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    depends_on:
      certbot:
        condition: service_started
      web:
        condition: service_started
    image: nginx:1.27.0-alpine
    networks:
      - external
      - internal
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx/:/etc/nginx/
      - ./ssl-data/certbot/conf:/etc/letsencrypt
      - ./ssl-data/certbot/www:/var/www/_letsencrypt
  postgres:
    env_file:
      - .env.postgres.local
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'david_runger']
      interval: 2s
      timeout: 1s
      retries: 10
    image: postgres:16.3-alpine
    networks:
      - internal
    volumes:
      - postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_INITDB_ARGS: --auth=scram-sha-256
      POSTGRES_USER: david_runger
  redis:
    # https://stackoverflow.com/a/72593084/4009384
    command:
      - /bin/sh
      - -c
      # - Double dollars, so that the variable is not expanded by Docker Compose
      # - Surround by quotes, so that the shell does not split the password
      # - The ${variable:?message} syntax causes shell to exit with a non-zero
      #   code and print a message, when the variable is not set or empty
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD is required}"
    env_file:
      - .env.redis.local
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 2s
      timeout: 1s
      retries: 10
    image: redis:7.2.5-alpine
    networks:
      - internal
    volumes:
      - redis:/data
  s3_db_backup:
    env_file:
      - .env.s3_db_backup.local
    image: dokku/s3backup
    networks:
      - external
  web:
    <<: *default-rails-config
    command: ['bin/rails', 'server']
    depends_on:
      initialize_database:
        condition: service_completed_successfully
    expose:
      - '3000'
  worker:
    <<: *default-rails-config
    command: ['bin/sidekiq']
    depends_on:
      initialize_database:
        condition: service_completed_successfully

networks:
  external:
    driver: bridge
  internal:
    driver: bridge
    internal: true

volumes:
  postgresql:
  redis:
