services:
  certbot:
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    image: certbot/certbot
    volumes:
      - ./ssl-data/certbot/conf:/etc/letsencrypt
      - ./ssl-data/certbot/www:/var/www/_letsencrypt
  memcached:
    healthcheck:
      # https://github.com/docker-library/memcached/issues/ 91#issuecomment-1733748674
      test: ['CMD-SHELL', 'echo "version" | nc -vn -w 1 127.0.0.1 11211']
      interval: 2s
      timeout: 1s
      retries: 10
    image: memcached:1.6.29-alpine
    ports:
      - '11211:11211'
  nginx:
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    image: nginx:1.27.0-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx/:/etc/nginx/
      - ./ssl-data/certbot/conf:/etc/letsencrypt
      - ./ssl-data/certbot/www:/var/www/_letsencrypt
  postgres:
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 2s
      timeout: 1s
      retries: 10
    image: postgres:16.3-alpine
    volumes:
      - postgresql:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: david_runger
      POSTGRES_HOST_AUTH_METHOD: trust
  rails:
    build:
      context: .
    depends_on:
      memcached:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.production.local
    environment:
      DATABASE_URL: postgres://david_runger:@postgres:5432/david_runger_production
      MEMCACHED_PASSWORD: ''
      MEMCACHED_URL: memcached://memcached:11211
      POSTGRES_HOST: postgres
      RAILS_ENV: production
      REDIS_URL: redis://redis:6379
    ports:
      - '3000:3000'
  redis:
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 2s
      timeout: 1s
      retries: 10
    image: redis:7.2.5-alpine
    ports:
      - '6379:6379'
    command: redis-server
    volumes:
      - redis:/data

volumes:
  postgresql:
  redis:
