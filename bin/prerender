#!/usr/bin/env ruby
# frozen_string_literal: true

require 'addressable'
require 'aws-sdk-s3'
require 'dotenv/load' if ENV['CI'] != 'true'
require 'ferrum'
require 'fileutils'

class Prerenderer
  def initialize
    @browser = Ferrum::Browser.new(process_timeout: 10, timeout: 10)
  end

  def prerender(url:, filename:)
    url = Addressable::URI.parse(url)
    url.query_values = (url.query_values || {}).merge(prerender: 'true')
    @browser.goto(url.to_s)
    upload_prerender_to_s3(filename: filename, html: @browser.body)
  end

  def quit_browser
    @browser.quit
  end

  private

  def upload_prerender_to_s3(filename:, html:)
    Aws::S3::Resource.new(region: ENV['S3_REGION']).
      bucket(ENV['S3_BUCKET']).
      object("prerenders/#{filename}").
      put(body: "<!DOCTYPE html>\n#{html}")
  rescue => error
    puts("Error uploading object: #{error.inspect}")
  end
end

prerenderer = Prerenderer.new
prerenderer.prerender(url: 'https://davidrunger.com', filename: 'home.html')
prerenderer.quit_browser
