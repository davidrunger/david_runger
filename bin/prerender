#!/usr/bin/env ruby
require 'rubygems'
require 'bundler'
Bundler.setup(:default, :test)

require 'addressable'
require 'aws-sdk-s3'
require 'dotenv/load' if ENV.fetch('CI', nil) != 'true'
require 'ferrum'
require 'nokogiri'

require_relative '../lib/retry.rb'

class Prerenderer
  def initialize
    assign_new_browser
  end

  def prerender(url:, filename:, expected_text:)
    Retry.retrying do
      url = Addressable::URI.parse(url)
      url.query_values = (url.query_values || {}).merge(prerender: 'true')

      render_page_content(url: url.to_s, expected_text:)

      upload_prerender_to_s3(
        filename:,
        body: html_for_prerendering("<!DOCTYPE html>\n#{@browser.body}"),
      )
    rescue
      quit_browser
      assign_new_browser

      raise # This will be rescued (and maybe re-raised) by `Retry.retrying`.
    end
  end

  def quit_browser
    @browser.quit
  end

  private

  def assign_new_browser
    Retry.retrying(errors: [Ferrum::ProcessTimeoutError]) do
      @browser = Ferrum::Browser.new(process_timeout: 20, timeout: 2.0)
    end
  end

  def render_page_content(url:, expected_text:)
    @browser.goto(url)

    # Give Chrome some time to parse the JavaScript and render the page content.
    15.times do
      return if @browser.body.include?(expected_text)

      sleep(0.2)
    end

    fail('Could not find expected content!')
  end

  def upload_prerender_to_s3(filename:, body:)
    git_sha = `git rev-parse HEAD`.strip
    raise('Could not determine git SHA!') if git_sha.empty?

    Aws::S3::Resource.new(region: 'us-east-1').
      bucket('david-runger-test-uploads').
      object("prerenders/#{git_sha}/#{filename}").
      put(body:)
  end

  def html_for_prerendering(html)
    @html_doc = Nokogiri::HTML(html)
    @html_doc.to_s
  end
end

prerenderer = Prerenderer.new
prerenderer.prerender(
  url: 'https://davidrunger.com',
  filename: 'home.html',
  expected_text: '@davidrunger',
)
prerenderer.quit_browser
